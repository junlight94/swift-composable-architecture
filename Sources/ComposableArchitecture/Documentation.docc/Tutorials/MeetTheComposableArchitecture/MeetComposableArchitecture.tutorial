@Tutorials(name: "The Composable Architecture") {
  @Intro(title: "Meet the Composable Architecture") {
    Composable Architecture(TCA)는 애플리케이션을 일관성 있고 이해하기 쉬운 방식으로 개발하기 위한 라이브러리입니다. 
    이 라이브러리는 구성(composition), 테스트(testing), 사용성(ergonomics)을 중점으로 설계되었습니다. 
    TCA는 SwiftUI, UIKit 등 다양한 프레임워크에서 사용할 수 있으며, iOS, macOS, tvOS, watchOS 등 모든 Apple 플랫폼에서 활용 가능합니다.  
  }
  
  @Chapter(name: "Essentials") {
    Composable Architecture에서 새로운 기능을 만드는 기본적인 과정을 탐구해보세요. 사이드 이펙트를 추가하고, 
    해당 기능을 위한 완전한 테스트 스위트(test suite)를 작성하는 방법도 다룹니다.
    
    @Image(source: "01-homepage.png")

    @TutorialReference(tutorial: "doc:01-01-YourFirstFeature")
    @TutorialReference(tutorial: "doc:01-02-AddingSideEffects")
    @TutorialReference(tutorial: "doc:01-03-TestingYourFeature")
    @TutorialReference(tutorial: "doc:01-04-ComposingFeatures")
  }
  
  @Chapter(name: "Navigation") {
    부모 기능에서 자식 기능으로의 네비게이션을 모델링하는 방법을 배우고, 
    옵셔널(optionals), 열거형(enums), 그리고 컬렉션(collections)을 사용하여 이를 간결하게 구현하는 방법을 익혀보세요.
    
    @Image(source: "02-homepage.png")

    @TutorialReference(tutorial: "doc:02-01-YourFirstPresentation")
    @TutorialReference(tutorial: "doc:02-02-MultipleDestinations")
    @TutorialReference(tutorial: "doc:02-03-TestingPresentation")
    @TutorialReference(tutorial: "doc:02-04-NavigationStacks")
  }
  
  @Resources {
    Composable Architecture를 사용하여 애플리케이션을 구축하는 방법을 더욱 깊이 탐구할 수 있는 추가 자료를 확인해보세요.
    
    @Videos(destination: "https://www.pointfree.co") {
      Point-Free는 Swift 프로그래밍 언어의 고급 주제를 탐구하는 비디오 시리즈입니다. 이 시리즈에서는 Composable Architecture의 거의 모든 부분을 처음부터 설계 원칙에 따라 구축하는 과정을 [여러 에피소드](https://www.pointfree.co/collections/composable-architecture)에 걸쳐 다룹니다.
    }
      
    @Forums(
      destination: "https://github.com/pointfreeco/swift-composable-architecture/discussions"
    ) {
      Composable Architecture를 사용 중인 다른 사람들과 함께 논의할 수 있는 다양한 온라인 커뮤니티가 있습니다.
      
      - [Join the community Slack](http://pointfree.co/slack-invite)
      - [Discuss on GitHub](https://github.com/pointfreeco/swift-composable-architecture/discussions)
      - [Discuss on Swift Forums](https://forums.swift.org/c/related-projects/swift-composable-architecture/61)
      - [Message us on Twitter](http://twitter.com/pointfreeco)
      - [Message us on Mastodon](http://hachyderm.io/@pointfreeco)
    }
      
    @SampleCode(destination: "https://github.com/pointfreeco/swift-composable-architecture/tree/main/Examples") {
      이 라이브러리는 Composable Architecture로 구축된 다양한 데모 애플리케이션과 사례 연구(case studies)를 제공합니다.
      
      - [Case studies](https://github.com/pointfreeco/swift-composable-architecture/tree/main/Examples/CaseStudies)
      - [Search](https://github.com/pointfreeco/swift-composable-architecture/tree/main/Examples/Search)
      - [Speech Recognition](https://github.com/pointfreeco/swift-composable-architecture/tree/main/Examples/SpeechRecognition)
      - [SyncUps](https://github.com/pointfreeco/swift-composable-architecture/tree/main/Examples/SyncUps)
      - [TicTacToe](https://github.com/pointfreeco/swift-composable-architecture/tree/main/Examples/TicTacToe)
      - [Todos](https://github.com/pointfreeco/swift-composable-architecture/tree/main/Examples/Todos)
      - [Voice memos](https://github.com/pointfreeco/swift-composable-architecture/tree/main/Examples/VoiceMemos)
    }
    
    @Documentation(destination: "https://pointfreeco.github.io/swift-composable-architecture/main/documentation/composablearchitecture/") {
      전체 문서를 온라인에서 확인해보세요.
      
      - [GitHub](https://pointfreeco.github.io/swift-composable-architecture/main/documentation/composablearchitecture)
    }
  }
}
